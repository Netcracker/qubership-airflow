kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      name: {{ .Values.service.name }}
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        name: {{ .Values.service.name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContexts.pod | nindent 8 }}
      {{- if .Values.affinity }}
      affinity:
        {{ .Values.affinity | toJson }}
      {{- end }}
      containers:
        - name: {{ .Values.service.name }}
          securityContext:
            {{- toYaml .Values.securityContexts.container | nindent 12 }}
          image: {{ template "integrationTests.image" . }}
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: TAGS
              value: {{ .Values.tags }}
            - name: AIRFLOW_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AIRFLOW_HOST
              value: {{ .Values.airflowHost }}
            - name: WORKER_SERVICE_NAME
              value: {{ .Values.workerServiceName }}
            - name: AIRFLOW_PORT
              value: {{ .Values.airflowPort | quote }}
            - name: EXECUTOR_TYPE
              value: {{ .Values.executorType }}
            {{- if not (contains (include "airflow.imagesToTest" .) "No images by default") }}
            - name: IMAGES_TO_TEST
              value: {{ include "airflow.imagesToTest" . }}
            {{- end }}
            {{- if .Values.statusWritingEnabled }}
            - name: STATUS_WRITING_ENABLED
              value: {{ .Values.statusWritingEnabled | quote }}
            - name: ONLY_INTEGRATION_TESTS
              value: {{ .Values.onlyIntegrationTests | quote }}
            - name: IS_SHORT_STATUS_MESSAGE
              value: {{ .Values.isShortStatusMessage | quote }}
            - name: STATUS_CUSTOM_RESOURCE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- end }}
            - name: AIRFLOW_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.name }}-secret
                  key: airflow-user
            - name: AIRFLOW_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.name }}-secret
                  key: airflow-password
            - name: API_SERVICE_NAME
              value: {{ .Values.apiServiceName }}
            - name: SCHEDULER_DEPLOYMENT
              value: {{ .Values.schedulerDeployment }}
            - name: DAG_PROCESSOR_DEPLOYMENT
              value: {{ .Values.dagProcessorDeployment }}
            - name: PROMETHEUS_HOST
              value: {{ .Values.prometheusHost }}
            - name: PROMETHEUS_PORT
              value: {{ .Values.prometheusPort | quote }}
            - name: RANDOM_RUN_TRIGGER
              value: {{ randAlphaNum 10 | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: output
              mountPath: /opt/robot/output
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: Always
      volumes:
        - name: output
          emptyDir: {}
